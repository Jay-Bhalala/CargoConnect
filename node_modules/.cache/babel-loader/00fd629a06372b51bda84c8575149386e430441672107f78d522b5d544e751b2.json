{"ast":null,"code":"var _jsxFileName = \"/Users/jeremychuah/Documents/GitHub/CargoConnect/src/components/CargoBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CargoBooking() {\n  _s();\n  const {\n    departureCity,\n    arrivalCity\n  } = useParams();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n  const handleBookCargo = async () => {\n    try {\n      // Check if an image is selected\n      if (!selectedImage) {\n        // Handle the case where no image is selected\n        alert(\"Please select an image.\");\n        return;\n      }\n\n      // Create a FormData object to send the image file to the server\n      const formData = new FormData();\n      formData.append('image', selectedImage);\n\n      // Example: Send the image to the server using the Fetch API\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        // Image uploaded successfully\n        alert('Image uploaded successfully.');\n        // Redirect to another page or perform other actions\n      } else {\n        // Handle the case where the image upload failed\n        alert('Image upload failed.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle any other errors that may occur during the booking process\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cargo Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Departure City: \", departureCity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Arrival City: \", arrivalCity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBookCargo,\n      children: \"Book Cargo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(CargoBooking, \"GQ8tFytzsaK6XrohixQIY19HoSY=\", false, function () {\n  return [useParams];\n});\n_c = CargoBooking;\nexport default CargoBooking;\nvar _c;\n$RefreshReg$(_c, \"CargoBooking\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","CargoBooking","_s","departureCity","arrivalCity","selectedImage","setSelectedImage","handleImageUpload","event","file","target","files","handleBookCargo","alert","formData","FormData","append","response","fetch","method","body","ok","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/jeremychuah/Documents/GitHub/CargoConnect/src/components/CargoBooking.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction CargoBooking() {\n  const { departureCity, arrivalCity } = useParams();\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n\n  const handleBookCargo = async () => {\n    try {\n      // Check if an image is selected\n      if (!selectedImage) {\n        // Handle the case where no image is selected\n        alert(\"Please select an image.\");\n        return;\n      }\n  \n      // Create a FormData object to send the image file to the server\n      const formData = new FormData();\n      formData.append('image', selectedImage);\n  \n      // Example: Send the image to the server using the Fetch API\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n  \n      if (response.ok) {\n        // Image uploaded successfully\n        alert('Image uploaded successfully.');\n        // Redirect to another page or perform other actions\n      } else {\n        // Handle the case where the image upload failed\n        alert('Image upload failed.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle any other errors that may occur during the booking process\n    }\n  };\n  \n\n  return (\n    <div>\n      <h2>Cargo Booking</h2>\n      <p>Departure City: {departureCity}</p>\n      <p>Arrival City: {arrivalCity}</p>\n      <input type=\"file\" onChange={handleImageUpload} />\n      <button onClick={handleBookCargo}>Book Cargo</button>\n    </div>\n  );\n}\n\nexport default CargoBooking;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC,aAAa;IAAEC;EAAY,CAAC,GAAGN,SAAS,CAAC,CAAC;EAClD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCL,gBAAgB,CAACG,IAAI,CAAC;EACxB,CAAC;EAED,MAAMG,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF;MACA,IAAI,CAACP,aAAa,EAAE;QAClB;QACAQ,KAAK,CAAC,yBAAyB,CAAC;QAChC;MACF;;MAEA;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEX,aAAa,CAAC;;MAEvC;MACA,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QAC1CC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACf;QACAR,KAAK,CAAC,8BAA8B,CAAC;QACrC;MACF,CAAC,MAAM;QACL;QACAA,KAAK,CAAC,sBAAsB,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B;IACF;EACF,CAAC;;EAGD,oBACEtB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB5B,OAAA;MAAAwB,QAAA,GAAG,kBAAgB,EAACrB,aAAa;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtC5B,OAAA;MAAAwB,QAAA,GAAG,gBAAc,EAACpB,WAAW;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEvB;IAAkB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClD5B,OAAA;MAAQ+B,OAAO,EAAEnB,eAAgB;MAAAY,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAAC1B,EAAA,CApDQD,YAAY;EAAA,QACoBH,SAAS;AAAA;AAAAkC,EAAA,GADzC/B,YAAY;AAsDrB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
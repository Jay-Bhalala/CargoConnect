{"ast":null,"code":"var _jsxFileName = \"/Users/jeremychuah/Documents/GitHub/CargoConnect/src/components/CargoBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CargoBooking() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n  const handleBookCargo = () => {\n    // Implement your booking logic here\n    // You can send the cargo details and the selected image to the server\n\n    // Example: Send cargo details and image to the server using a fetch request\n    // Replace '/api/bookCargo' with the actual API endpoint\n    // Make sure to send the image as a FormData object if necessary\n    fetch('/api/bookCargo', {\n      method: 'POST',\n      body: selectedImage // If you need to send the image\n      // Additional payload data can be included here if needed\n    }).then(response => {\n      if (response.status === 200) {\n        // Booking was successful\n        // You can choose to redirect the user to another page upon success\n\n        // Example: Redirect to a success page\n        window.location.href = '/success';\n      } else {\n        // Handle booking failure\n        // You can display an error message to the user or take other actions\n        console.error('Booking failed');\n      }\n    }).catch(error => {\n      // Handle network or request errors\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cargo Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBookCargo,\n      children: \"Book Cargo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(CargoBooking, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = CargoBooking;\nexport default CargoBooking;\nvar _c;\n$RefreshReg$(_c, \"CargoBooking\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CargoBooking","_s","selectedImage","setSelectedImage","handleImageUpload","event","file","target","files","handleBookCargo","fetch","method","body","then","response","status","window","location","href","console","error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/jeremychuah/Documents/GitHub/CargoConnect/src/components/CargoBooking.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction CargoBooking() {\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n\n  const handleBookCargo = () => {\n    // Implement your booking logic here\n    // You can send the cargo details and the selected image to the server\n\n    // Example: Send cargo details and image to the server using a fetch request\n    // Replace '/api/bookCargo' with the actual API endpoint\n    // Make sure to send the image as a FormData object if necessary\n    fetch('/api/bookCargo', {\n      method: 'POST',\n      body: selectedImage, // If you need to send the image\n      // Additional payload data can be included here if needed\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          // Booking was successful\n          // You can choose to redirect the user to another page upon success\n\n          // Example: Redirect to a success page\n          window.location.href = '/success';\n        } else {\n          // Handle booking failure\n          // You can display an error message to the user or take other actions\n          console.error('Booking failed');\n        }\n      })\n      .catch((error) => {\n        // Handle network or request errors\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Cargo Booking</h2>\n      <input type=\"file\" onChange={handleImageUpload} />\n      <button onClick={handleBookCargo}>Book Cargo</button>\n    </div>\n  );\n}\n\nexport default CargoBooking;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCL,gBAAgB,CAACG,IAAI,CAAC;EACxB,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA;;IAEA;IACA;IACA;IACAC,KAAK,CAAC,gBAAgB,EAAE;MACtBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEV,aAAa,CAAE;MACrB;IACF,CAAC,CAAC,CACCW,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B;QACA;;QAEA;QACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,UAAU;MACnC,CAAC,MAAM;QACL;QACA;QACAC,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;MACjC;IACF,CAAC,CAAC,CACDC,KAAK,CAAED,KAAK,IAAK;MAChB;MACAD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAExB;IAAkB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClD3B,OAAA;MAAQ8B,OAAO,EAAEpB,eAAgB;MAAAa,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACzB,EAAA,CA9CQD,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAgDrB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
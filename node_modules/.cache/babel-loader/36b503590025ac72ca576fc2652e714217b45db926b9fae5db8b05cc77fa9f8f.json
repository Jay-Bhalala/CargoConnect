{"ast":null,"code":"var _jsxFileName = \"/Users/jeremychuah/Documents/GitHub/CargoConnect/src/components/MarketplaceSquares.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MarketplaceSquares({\n  cargoListings\n}) {\n  _s();\n  const [uniqueTruckerNames, setUniqueTruckerNames] = useState([]);\n  useEffect(() => {\n    // Sample trucker names\n    const truckerNames = ['John Doe', 'Jane Smith', 'Mike Johnson', 'Emily Davis', 'Tom Wilson'];\n\n    // Shuffle the names randomly\n    const shuffledNames = [...truckerNames].sort(() => Math.random() - 0.5);\n\n    // Set the shuffled names as uniqueTruckerNames\n    setUniqueTruckerNames(shuffledNames);\n  }, []);\n  const getUniqueTruckerName = () => {\n    const name = uniqueTruckerNames.pop();\n    // If we run out of unique names, reset the list to shuffle again\n    if (uniqueTruckerNames.length === 0) {\n      // Sample trucker names\n      const truckerNames = ['John Doe', 'Jane Smith', 'Mike Johnson', 'Emily Davis', 'Tom Wilson'];\n\n      // Shuffle the names randomly\n      const shuffledNames = [...truckerNames].sort(() => Math.random() - 0.5);\n\n      // Set the shuffled names as uniqueTruckerNames\n      setUniqueTruckerNames(shuffledNames);\n    }\n    return name;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 p-4 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Cargo Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-3 gap-4 mx-auto max-w-7xl\",\n      children: cargoListings.map((listing, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-xl shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2 underline\",\n          children: getUniqueTruckerName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Departure City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), \" \", listing.departureCity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Arrival City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), \" \", listing.arrivalCity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Departure Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), \" \", listing.departureDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Arrival Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), \" \", listing.arrivalDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Cargo Space:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), \" \", listing.cargoSpace, \" cubic feet\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(MarketplaceSquares, \"jMy6zUWCHy9z2LwE7BsqNTzBzXs=\");\n_c = MarketplaceSquares;\nexport default MarketplaceSquares;\nvar _c;\n$RefreshReg$(_c, \"MarketplaceSquares\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MarketplaceSquares","cargoListings","_s","uniqueTruckerNames","setUniqueTruckerNames","truckerNames","shuffledNames","sort","Math","random","getUniqueTruckerName","name","pop","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","listing","index","class","departureCity","arrivalCity","departureDate","arrivalDate","cargoSpace","_c","$RefreshReg$"],"sources":["/Users/jeremychuah/Documents/GitHub/CargoConnect/src/components/MarketplaceSquares.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MarketplaceSquares({ cargoListings }) {\n  const [uniqueTruckerNames, setUniqueTruckerNames] = useState([]);\n\n  useEffect(() => {\n    // Sample trucker names\n    const truckerNames = ['John Doe', 'Jane Smith', 'Mike Johnson', 'Emily Davis', 'Tom Wilson'];\n    \n    // Shuffle the names randomly\n    const shuffledNames = [...truckerNames].sort(() => Math.random() - 0.5);\n\n    // Set the shuffled names as uniqueTruckerNames\n    setUniqueTruckerNames(shuffledNames);\n  }, []);\n\n  const getUniqueTruckerName = () => {\n    const name = uniqueTruckerNames.pop();\n    // If we run out of unique names, reset the list to shuffle again\n    if (uniqueTruckerNames.length === 0) {\n      // Sample trucker names\n      const truckerNames = ['John Doe', 'Jane Smith', 'Mike Johnson', 'Emily Davis', 'Tom Wilson'];\n    \n      // Shuffle the names randomly\n      const shuffledNames = [...truckerNames].sort(() => Math.random() - 0.5);\n\n      // Set the shuffled names as uniqueTruckerNames\n      setUniqueTruckerNames(shuffledNames);\n    }\n    return name;\n  };\n\n  return (\n    <div className=\"bg-gray-100 p-4 text-center\">\n      <h2 className=\"text-2xl font-bold mb-4\">Cargo Listings</h2>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-3 gap-4 mx-auto max-w-7xl\">\n        {cargoListings.map((listing, index) => (\n          <div\n            key={index}\n            className=\"bg-white p-8 rounded-xl shadow-lg\"\n          >\n            <h3 className=\"text-lg font-semibold mb-2 underline\">{getUniqueTruckerName()}</h3>\n            <p class=\"text-gray-700\">\n              <span className=\"font-semibold\">Departure City:</span> {listing.departureCity}\n            </p>\n            <p class=\"text-gray-700\">\n              <span className=\"font-semibold\">Arrival City:</span> {listing.arrivalCity}\n            </p>\n            <p class=\"text-gray-700\">\n              <span className=\"font-semibold\">Departure Date:</span> {listing.departureDate}\n            </p>\n            <p class=\"text-gray-700\">\n              <span className=\"font-semibold\">Arrival Date:</span> {listing.arrivalDate}\n            </p>\n            <p class=\"text-gray-700\">\n              <span className=\"font-semibold\">Cargo Space:</span> {listing.cargoSpace} cubic feet\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default MarketplaceSquares;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}